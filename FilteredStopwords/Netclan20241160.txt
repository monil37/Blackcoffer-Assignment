Google LSA API Data Automation and Dashboarding Client Background Client: A leading marketing firm the USA Industry Type: Marketing services & Consulting Services: Marketing consultant Organization Size: 100+ Project Objective For this project objective was to perform API Data Abstraction using Google LSA API GCP, Automation of data fetching and storing BigQuery on basis, Storing Historical data for all active companies, Fetching Customer Report then storing data on basis BigQuery also storing Historical data for all companies, Perform Linear Regression Modelling on Historical data for all companies and storing the modeling Summary google sheet a structured manner, Basecamp Automation with LSA Data, Creating 4 BI Dashboard Data Studio for Live, Historical, Modelling and Customer Report data for all companies. Project Description For this project task was to obtain account report and detailed lead report for a specific dates and customer_id using Google Local Service Ads API Service Google Platform. Further need to integrate with Google BigQuery database storing MCC data for all companies on a basis then storing Historical data for all active companies. Also notifying clients through email and passing messages containing account data a message format to BaseCamp Message and Campfire of respective company projects through its API all with python programming, further deploying the script on Heroku Server for automating all this task. Then Creating BI Dashboard Data Studio connecting with BigQuery and Creating Live Dashboard, Historical Dashboard for all companies. On historical data for all companies, Linear Regression Modelling needs to perform and to create Modelling Dashboard for all companies Data Studio. Further needs to Exploratory Data Analysis for all companies on Historical Data. To Store Customer Account Report for message lead and phone lead on a basis, Script needs to be created and deployed Heroku and also need to store Historical data for these companies and Finally Create Data Studio Dashboard on it. Creating Representation Dashboard for two Companies which involves multiple Reports and blending of multiple data sources Big Query. Our Solution >> Module 1: API Data Abstraction Which first includes generation of the access token and refresh token with the scope of Google AdWord API for the authentication and connecting with Google LSA API. Then fetching data JSON format for particular account name based on customer_id assigned API URL while fetching data. Likewise generating a script that would Handle data generation for all other active accounts based on their customer id. >> Module 2: Data Imputation and Storing Converting the JSON data to the pandas data forming a list of data for all the active accounts by looping them then deriving certain attributes based on their handling the missing and inf values. Finally storing the data Google Big Query database within the respective table for all accounts using Bigquery API. >> Module 3: Data Storing BigQuery and Notification Automation The task was to automate notifications sent to email and to Basecamp and the data transferred to the database on a basis by deploying the script to Heroku Server setting time parameters based on the time zone. >> Module 4: Automation tools created till now: i. LSA_AccountReport_daily_BigQuery tool: For Automation of Account Report for all companies on a basis. Scheduling it at 1:00 am the Los Timezone. ii. LSA_AccountReport_Historical_API tool: For Storing Historical Data for companies for the last few Years till the end date which we set. iii. Basecamp_lsa_automation: This is used to the lsa data a message format to Campfire for respective companies groups and store lsa data combined for all companies to Messageboard and Campfire at one Automation Python Group Basecamp. iv. LSA_DateRange Tool: Used to store missed out data for all the companies for a few sets of days or months as per the need. v. LSA_MainSheet_AutoUpdation tool: For Auto updation of sheet ‘LSA Client Lead’ Google Sheet. As Data are fetched on the basis of this list it is required to auto update this sheet for all the companies entered would store information of those like company name, account id and database name. vi. LSA_daily_CustomerReport tool: Created to Store LSA Customer Report for all companies database ‘CustomerReport_PhoneLead’ & ‘CustomerReport_MessageLead’ on basis. vii. Historical_LSA_CustomerReport tool: Created to Store LSA Customer Report for all companies database ‘CustomerReport_PhoneLead’ & ‘CustomerReport_MessageLead’ storing historical data for year 2021. >> Module 5: Data Studio BI Dashboards Created: i. Historical Dashboard ii. Live Dashboard ii. Customer Report Dashboard iii. Modelling Report Dashboard iv. Representation Dashboard Project Deliverables Data Studio Dashboard Sheet All Codes for the Deployed tools and for Modelling and Test Purpose . Tools used ● PyCharm ● Jupyter Notebook ● Anaconda ● Heroku ● Notepad++ ● Google Sheet API ● Google LSA API on GCP ● Google BigQuery ● Sublime Text ● Brackets ● JsonViewer Language/techniques used ● Python ● SQL Models used project ‘Google Adword LSA API Reports automation into Google Big Query database and Basecamp’ developed with a software model which makes the project quality, reliable and cost-effective. ● Software Model: RAD(Rapid Application Development model) Model ● This project follows a RAD Model as our model is not forming the loop end to the start, also project was based on prototyping without any specific planning. the RAD model, there is less attention paid to the planning and priority is given to the development tasks. It targets developing software a span of time. ● Advantages of RAD Model: o Changing requirements can be accommodated. o Progress can be measured. o Iteration time can be with the use of powerful RAD tools. o Productivity with fewer people a time. o Reduced development time. o Increases reusability of components. o initial reviews occur. o Encourages customer feedback. o Integration the very beginning solves a lot of integration issues Skills used ● API Data Abstraction ● Data Mining and Statistical Modelling ● Data Wrangling ● Deployment for Automation ● Data Visualization ● SQL ● Machine Learning ● Python Programming including OOPs and Exception Handling Databases used ● Google Firestore (Just for Testing Purpose) ● Google BigQuery Web Servers used Google BigQuery Database with up to 1 TB of storage is being used. What are the technical Challenges Faced during Project Execution ● Scheduling Automation of Python Script. ● Data Exceptions and Duplication BigQuery Tables. ● Refresh token Expiration After 7 Days. ● Data Exception due to Inactive companies or not Updation of LSA sheet. ● Basecamp ProjectId Issue for transferring Data to multiple companies projects. ● Data Studio Time Series Plot data mismatch due to multiple account id. How the Technical Challenges were Solved ● Scheduling Automation of Python Script. Python Library BlockingScheduler were used and the Timezone variable ‘TZ’ was set to Los Heroku ● Data Exceptions and Duplication BigQuery Tables. Structuring SQL Query to with all the database issues which were being used BigQuery to solve those issues. ● Refresh token Expiration after 7 Days. Initially ‘Auth Playground’ was used for generating Refresh token which was getting expired after every 7 Days to last it longer for than a year we are now using the refresh token which was generated using Python script where proper token endpoints and other headers were defined before generating the refresh token. ● Data Exception due to Inactive companies or not Updation of LSA sheet. Data Exception occurred while API data abstraction for few of the companies which were solved by adding nested try and except statements after understanding issues also ‘LSA Clients Lead’ sheet was not being updated by other members due to which we missed out data for few of the companies which were solved by creating script which automatically update the mainsheet when error occurred. ● Basecamp ProjectId Issue for transferring Data to multiple companies projects. This issue was solved by creating Basecamp sheet where data was fetched now by mapping the account id of fetched data using LSA sheet and project id of all the basecamp companies. ● Data Studio Time Series Plot data mismatch due to multiple account id. Solved by adding parameters like setting the metrics which a summation of all the companies on a particular for all the account id. 
Connecting MongoDB Database to BI Dashboard: Dashboard Automation Client Background Client: A leading tech firm Newzealand Industry Type: Retail Services: Retail business Organization Size: 100+ Project Objective Johnco had a MongoDB Database that wanted to connect to a BI Dashboard. However, ODBC connectors were not working for his level of subscription, needed a cheaper workaround. Project Description Johnco had a MongoDB Database containing a amount of data that wanted to visualize a BI Dashboard. initially tried to use ODBC connectors to connect his database to BI, but ran into issues due to his level of subscription. We were brought to help find a cheaper workaround. Our solution involved using Python to extract the relevant data Brodie’s MongoDB Database. We used the Pandas library to create Dataframes, which we then uploaded to Azure Blob Storage as tables. We set up Azure pipeline that ran a Python script every 30 minutes to update the tables with data the database. Our Solution We used Brodie’s MongoDB Database to extract relevant Data Clusters as Pandas Dataframes. We then added them as tables to Azure Blob Storage and set up a Python script to Azure pipeline that refreshed every 30 minutes. This allowed us to keep the data sync and provide with up-to-date information for his BI Dashboard. Project Deliverables The final deliverable was a readable CSV file that contained the converted data the original JSON format. Tools used Jupyter Notebook, Google Colab, BI, MongoDB Compass, Microsoft Excel, Azure Blob Storage Language/techniques used Python, Pandas, Azure Storage Skills used Python programming, Azure Storage, data extraction and manipulation Databases used MongoDB Database Web Servers used Azure Blob Storage What are the technical Challenges Faced during Project Execution The challenge we faced was finding a to connect Brodie’s MongoDB Database to his BI Dashboard without using ODBC connectors. We overcame this challenge by using Python and Azure Blob Storage to extract and store the relevant data. How the Technical Challenges were Solved We solved the issue by using the client’s MongoDB Database to extract relevant Data Clusters as Pandas Dataframes. We then added these dataframes as tables to Azure Blob Storage and set the Python script to Azure pipeline that refreshed every 30 minutes. This allowed the client to access the data BI without the need for ODBC connectors. Business Impact Our solution allowed to visualize his data a BI Dashboard without having to pay for expensive ODBC connectors. The Azure Blob Storage solution we implemented was much cost-effective and provided him with up-to-date information every 30 minutes. Project website url https://github.com/AjayBidyarthy/Brodie-Johnco 